* <2016-07-18 Mon>
** DONE Talk with Jens, report my work status and ask for futher tasks
   CLOSED: [2016-07-18 Mon 13:11]
** DONE Get a hold of the qamp board and its relevant devices.
   CLOSED: [2016-07-19 Tue 16:22]
** DONE Figure out how to flash FPGA via Xilinx FPGA programmer.
   CLOSED: [2016-07-19 Tue 16:22]

* <2016-07-19 Tue>

** DONE How to manually update a fresh QAmplifier Board.
   CLOSED: [2016-07-19 Tue 16:22]

* <2016-07-20 Wed>
** DONE Maybe try to debug the failure of qamp-application-tests
   CLOSED: [2016-07-26 Tue 09:17]
   - Note taken on [2016-07-26 Tue 09:19] \\
     Jens said that there is no need to solve problems that could be avoided by installing a faster pc.
     Hence replacing a new dataserver-pc is the top one task now.
** DONE Replaced dataserver-pc on the QAmp-TestSystem
   CLOSED: [2016-07-20 Wed 12:53]
** DONE Start and check the jenkins build results after changing the new dataserver-pc
   CLOSED: [2016-07-27 Wed 08:16]
** DONE Introduction of registering work time from Michille and Jens.
   CLOSED: [2016-07-26 Tue 09:21]

* <2016-07-26 Tue>
** DONE Continue with jenkins build
   CLOSED: [2016-07-27 Wed 08:16]
** DONE Fill out my time registration
   CLOSED: [2016-07-26 Tue 11:38]
* <2016-07-27 Wed>
** DONE Discuss with Jens about next task since qamp-dataserver pc is up and running
   CLOSED: [2016-07-27 Wed 08:50]
** DONE To buy a java book
   CLOSED: [2016-08-01 Mon 15
** DONE Look into burn in test failure
   CLOSED: [2016-08-17 Wed 09:39]
* <2016-08-01 Mon>
** DONE 1 hour Java Garbage Collection Basics
   CLOSED: [2016-08-01 Mon 15:18]
** DONE Import old data from the dataserver PC to the new one
   CLOSED: [2016-08-01 Mon 15:18]


## ======================================================================
** DONE Install a new test bench PC
   CLOSED: [2016-09-14 Wed 22:52]
* <2016-08-04 Thu>
** DONE Learn rrdmontools & how to create .run file
   CLOSED: [2016-08-05 Fri 10:07]
   - Note taken on [2016-08-05 Fri 10:08] \\
     *.run file is SFX (Self-Extracted installer) that will be installed via
      "last-command" in the very last step of installing Ubuntu server.
   - Note taken on [2016-08-05 Fri 10:07] \\
     rrdmontools is a third party package mainly for monitoring the system status.
** DONE Use clonezilla to copy hard drive
   CLOSED: [2016-08-05 Fri 10:09]
   - Note taken on [2016-08-05 Fri 10:09] \\
     Created two live USB stick, for clonezilla and gparted.

     Clonezilla is used to clone all the data from the source hard drive (4TB) to the
     target hard drive (10TB) which will automatically be partitioned into a 4TB
     partition.

     Then Gparted is used to resize the target hard drive from 4TB back to 10TB.
     - SwapOff "Linux-swap" partition. Actually not needed, since we booted from
       gparted live usb and this partition was was not mounted at the first place.
     - Delete "Linux-swap" partition. Now you will have a pretty big unallocated
       partition.
     - Apply operation.
     - Create a new "Linux-swap" partition at the end of the hard drive. SWAP = 2 *
       RAM.
     - Apply operation.
     - Resize/extend the "data" partition all the way to the rest unallocated
       partition.
     - Apply operation.

** DONE Learn sed (global) substitution
   CLOSED: [2016-08-04 Thu 16:12]
** DONE Learn SFX - self extracting installer (*.run file in the *.iso image file)
   CLOSED: [2016-08-04 Thu 16:13]
** DONE Learn Ubuntu server cd customization
   CLOSED: [2016-08-04 Thu 16:14]
** DONE Short mysql video tutorial
   CLOSED: [2016-08-04 Thu 16:15]
** DONE Learn clonezilla & gparted, and their live USB creation
   CLOSED: [2016-08-04 Thu 16:15]
** DONE Learn fdisk (command line tool for creating partitions)
   CLOSED: [2016-08-04 Thu 16:16]

* <2016-08-08 Mon>
** DONE Learn Debian package system
   CLOSED: [2016-08-08 Mon 14:22]
   - Note taken on [2016-08-08 Mon 14:22] \\
     FPM is a ruby package used to create the sophion debian package.
     Need to learn that tool as well.
   - What is a Debian package?
   - How to create/modify/remove a simple Debian package?
** DONE Try to install the sophion debian package in the Ubuntu installed in VirtualBox
   CLOSED: [2016-08-10 Wed 09:28]
   - Note taken on [2016-08-10 Wed 09:29] \\
     Maybe you also want to learn how to create a debian package from scratch.
* <2016-08-09 Tue>
* <2016-08-10 Wed>
** DONE Learn the back scene of installing a debian package
   CLOSED: [2016-08-17 Wed 09:38]
** DONE Learn how to compile java unittest, expecially for BurnInTest.class
   CLOSED: [2016-08-17 Wed 09:38]
   - Note taken on [2016-08-09 Tue 10:21] \\
     Jenkins ->  Qube -> 2.x -> UpdatePackage -> unittestfiles.zip
     -> unittestfiles-extract -> lib -> BurnInTest.class
** DONE What and where is ShortVoltageProtocol.zip file?
   CLOSED: [2016-08-10 Wed 09:30]
   - Note taken on [2016-08-10 Wed 09:30] \\
     ShortVolatgeProtocol.zip
       - Plan.xml
     It could be loaded into ViewPoint for visualizing the waeveform.
     It is exactly the same as the command seen in the log.
     waveform -i 0 -c -s 250,0,0 -s 5,0,-500 -s 2495,-500,500 -s 5,500,0 -z
** DONE To understand more about java G1 GC logs
   CLOSED: [2016-08-17 Wed 09:39]
   - Note taken on [2016-08-10 Wed 12:40] \\
     https://blogs.oracle.com/poonam/entry/understanding_g1_gc_logs

* <2016-08-17 Wed>
** IN-PROGRESS Run another BurnInTest together with WireShark capture enabled.
** DONE Install a new Ubuntu PC 16.04 LTS for a backup test bench.
   CLOSED: [2016-08-17 Wed 16:27]
   - Note taken on [2016-08-17 Wed 16:27] \\
     Still need to install the debian package on it before using it.
** DONE Meeting with Jens.
   CLOSED: [2016-08-17 Wed 16:28]

** DONE Learnt how to add a wireshark custom protocol, aka. wireshark dissector.
   - Note taken on [2016-08-17 Wed 16:30] \\
     Martin has already created a Qamp dissector on mha-linux. I could re-use his work then. :)
   https://www.wireshark.org/docs/wsdg_html_chunked/ChDissectAdd.html
   CLOSED: [2016-08-17 Wed 16:28]
* <2016-08-18 Thu>
** DONE BurnInTest Error Analysis
  CLOSED: [2016-08-25 Thu 09:24]
** DONE Inform the error analysis results to Jens
   CLOSED: [2016-08-25 Thu 09:24]
** DONE Reading code base
   CLOSED: [2016-08-25 Thu 09:23]
* <2016-08-25 Thu>
** DONE Fix testbench by changing t_global_setting:mode to MCLD
   CLOSED: [2016-09-14 Wed 22:53]
** DONE Try to execute a 12-hour BurnIntest
   CLOSED: [2016-09-05 Mon 15:29]
   - Note taken on [2016-09-05 Mon 15:29] \\
     With new test bench, running 12H BurnInTest is fine. But still I would like to
     try more rounds before we can conclude that BurnInTest is fully functional.
     And if that is the case, maybe we could change back to the old manner. Even Jens
     does not think it is really necessary.
* <2016-09-05 Mon>
** DONE Finished all BurnInTest related python scripts checkin.
   CLOSED: [2016-09-05 Mon 15:37]
** DONE Started another 12H BurnInTest on 6 boards.
   CLOSED: [2016-09-05 Mon 15:37]
** DONE Learnt how to change python sh module log level by using logging module.
   CLOSED: [2016-09-05 Mon 15:37]
** DONE Getting used to git svn routine.
   CLOSED: [2016-09-05 Mon 15:37]
** DONE Found out that init_qamp.ini is utilized on the test_boards test.
   CLOSED: [2016-09-05 Mon 15:35]
   - Note taken on [2016-09-05 Mon 15:35] \\
     /home/tools/init_qamp.ini can be copied from the old test bench. But it
     needs further understanding, since it is messing up with BurnInTest now.
** DONE Tried test board test and it did not work well.
   CLOSED: [2016-09-05 Mon 15:36]
   - Note taken on [2016-09-05 Mon 15:38] \\
     It complains about mongoose cannot be started on port 80.
     My current understanding about mongoose is that it is a simple webserver.
     But what does it do for test board test?
     I need to find out in the coming week or so.
* <2016-09-06 Tue>
** DONE Changed jenkins job after Niels's changes
   CLOSED: [2016-09-06 Tue 13:28]
** DONE Manually build actioneditortest.jar and download it to the new test bench
   CLOSED: [2016-09-09 Fri 09:38]
   - Note taken on [2016-09-06 Tue 13:29] \\
     It should be generated by jenkins.
     But jenkins is not that stable right now since Niels is re-organizing all the stuff there.
** DONE Performed 12H BurnInTest
   CLOSED: [2016-09-09 Fri 09:38]
** DONE Tried a little bit with Mongoose webserver
   CLOSED: [2016-09-09 Fri 09:38]
** DONE Test board test will restore FPGA back to the correct state, however redboot
   CLOSED: [2016-09-09 Fri 09:41]
   - Note taken on [2016-09-09 Fri 09:42] \\
     The culprit is the power supply Jens has made specially for the testbench. The
     arduino inside the testbench is capable of powercycle only the power supply is
     coming from the testbench itself.

     Workaround is to manually powercycle if the external power supply is used.
   will timeout.

* <2016-09-09 Fri>
** DONE Find out why Qamp board could not finish the command
   CLOSED: [2016-09-14 Wed 22:53]
** DONE Introduced renaming log folder in case of BurnInTest failure.
   CLOSED: [2016-09-09 Fri 09:40]
** TODO Try to remove listener in the BurnInTest
** DONE Read confluence document about testbench harware specs
   CLOSED: [2016-09-12 Mon 11:20]
   - Note taken on [2016-09-12 Mon 11:20] \\
     It seems that the power supply is OK as I suspected.
* <2016-09-12 Mon>
** DONE Take a closer look at OpenAmplifierTest
   CLOSED: [2016-09-13 Tue 21:03]
** DONE Unerstand OpenAmplifierTest plan file - OpenAmpAction.zip
   CLOSED: [2016-09-13 Tue 21:03]
** DONE Note: no starttime argument in the runwaveform command
   CLOSED: [2016-09-13 Tue 21:03]
   - Note taken on [2016-09-13 Tue 21:03] \\
     There is a default starttime if it is not defined or given.
* <2016-09-13 Tue>
** DONE BurnInTest is working with the latest actioneditortest.jar
   CLOSED: [2016-09-13 Tue 21:05]
** DONE init_qamp.py test is working with the old qamp-application and qamp-fpga
   CLOSED: [2016-09-13 Tue 21:06]
** DONE Now it is a mix on the new testbench pc
   CLOSED: [2016-09-13 Tue 21:06]
   - Note taken on [2016-09-13 Tue 21:07] \\
     Jens is going to do a BurnInTest tomorrow and I would like to use the new
     BurnInTest. But also we need to make init_qamp.py test working. Hence the
     current solution is a mix between these two. I need to locate the bad
     commit that breaks init_qamp.py test.
* <2016-09-14 Wed>
** DONE Executed BurnInTest for 8 boards
   CLOSED: [2016-09-14 Wed 22:34]
** DONE Installed Ubuntu 16.04 on mha-linux
   CLOSED: [2016-09-14 Wed 22:37] DEADLINE: <2016-09-14 Wed>
** DONE Inspected the BurnInTest failure logs
   CLOSED: [2016-09-14 Wed 22:38]
* <2016-09-15 Thu>
** DONE Learn how to use wireshark capture via command line
   CLOSED: [2016-09-15 Thu 22:03] DEADLINE: <2016-09-15 Thu>
   - Note taken on [2016-09-15 Thu 22:03] \\
     sudo apt-get install tshark
     tshark --help
     tshark -i eth1 -f "host 10.222.156.25" -b filesize:10000 -w tshark_output
** DONE Modify the BurnInTest script to use wireshark capture
   CLOSED: [2016-09-15 Thu 22:05] DEADLINE: <2016-09-15 Thu>
   - Note taken on [2016-09-15 Thu 22:05] \\
     Run tshark in another shell
** DONE Training session about QMS
   CLOSED: [2016-09-15 Thu 22:05] DEADLINE: <2016-09-15 Thu>
** DONE Remove the failed Qamp board, rerun BurnInTest again
   CLOSED: [2016-09-15 Thu 22:05] DEADLINE: <2016-09-15 Thu>
   - Note taken on [2016-09-15 Thu 22:06] \\
     After removed the failed Qamp.board6. The test still failed pretty quickly.
     Decrease the number of boards down to 2.
** DONE Try to understand why FPAGclock - CPUclock = 512
   CLOSED: [2016-09-15 Thu 22:07] DEADLINE: <2016-09-15 Thu>
   - Note taken on [2016-09-15 Thu 22:07] \\
     My suspicion is power supply is not strong enough for 8 boards at the same time.
* <2016-09-16 Fri>
** DONE Checked 2 boards BurnInTest yesterday, and both went well
   CLOSED: [2016-09-16 Fri 20:56]
** DONE Executed another round of BurnInTest for 7 boards for 12H
   CLOSED: [2016-09-16 Fri 20:57]
** DONE The failure is not due to lack of power.
   CLOSED: [2016-09-16 Fri 20:58]
** DONE Learnt VHDL tutorial
   CLOSED: [2016-09-16 Fri 20:58]
** DONE Trying to understand LED D7, D8 of FPGA, what are they indicating.
   CLOSED: [2016-09-16 Fri 20:58]
* <2016-09-20 Tue>
** DONE Executed another BurnInTest for 6 boards
   CLOSED: [2016-09-20 Tue 14:40]
** DONE Created a test-wjn.ini for local BurnInTest. Special for defected channel P1.
   CLOSED: [2016-09-20 Tue 14:42]
** DONE Understood a little bit about powerCycle
   CLOSED: [2016-09-20 Tue 14:42]
** DONE Asked Jens about LabView
   CLOSED: [2016-09-20 Tue 14:42]
** DONE Fixed Calibration QAmp test
   CLOSED: [2016-09-20 Tue 14:43]
   - Note taken on [2016-09-20 Tue 14:43] \\
     After switching the USB cable of the calibration board. Everything went smooth.
* <2016-10-03 Man>
** TODO Recap on stressful test
   - Note taken on [2016-10-03 Man 22:26] \\
     Currently Qamp stressful test is the most failing junit test. After some
     investigation, I am going to try to recap it.

     1. What is Qamp stressful test?
     In short, it runs 3 rounds of the commands below. QAmp> waveform QAmp>
     runwaveform

     After each data transfer, the amount of data and transder rate will be asserted.
     assertGreatTrue(data, 3200000) assertGreatTrue(transderrate, 3200kb/s)

     QAmp> error -l And then, assertTrue(errors, 0)

     2. What is the failure?
     Among 12 QAmp boards, around 3 to 4 boards will throw out error msg like
     [DATA_INVALID] Network performance too slow.

     So the test will fail during assertTrue(errors, 0)

     However, it only fails when the test is executed on the qamp-dataserver-1
     jenkins node. If it is executed on qamp-ctrl-pc, it can be finished OK.

     3. Why it fails?
     After comparing the failure.log (qamp-dataserser-1) and ok.log (qamp-ctrl-pc), I
     noticed that the failed boards have longer data transfer time while the other
     boards transfer more often on ubuntu pc.

     On windows pc, all the boards more or less transfer equally. Or should I say
     fairness here?

     Also it is an indication that qamp application should probably not to be blamed
     for this failure.

     My personal thoughts is that it is due to the difference of cpu scheduler
     running on windows pc (round robin, as far as I know) and ubuntu (normally 3
     kinds listed below)

     *noop* is often the best choice for memory-backed block devices (e.g. ramdisks)
     and other non-rotational media (flash) where trying to reschedule I/O is a waste
     of resources

     *deadline* is a lightweight scheduler which tries to put a hard
     limit on latency

     *cfq* tries to maintain system-wide fairness of I/O bandwidth

     I will try to change the scheduler to see if it gives a difference·

     4. WireShark challenge
     qamp-dataserser-1 is a ubuntu-server, not desktop version. only "tshark" can be
     used to capture the packets. It stands for terminal wireshark.

     At first, I tried to capture all 12 boards which yeilds around 900MB pcap file.
     Which later I almost cannot open in wireshark, it simply irresponding.

     Of course, I could filter specific boards. Since the failed boards are random.
     Hence it is slightly difficult to choose the ip. I will just try to capture
     10.222.156.129, which is board 9. Until now, it is the most failed one.

     However I don't think we could benefit very much from this. Since we already
     know the reason is that QAmp generates data too fast (overrides the circular
     buffer) while the dummy folder server is not handling the data.

     5. Issue regarding dummy folder server
     handle() inside dummy folder server will be invoked for each of the tcp
     connection (each tcp connection is a thread).

     Inside the handle(), it is something like

     #+BEGIN_SRC java
     while(true) {
         inputStream.get()

         // read 9 integers which are header info
         while(data < 9) {
             imputStream.read()
         }

         // consuming the remaining chunk of data
         while (remaining > 0) {
             inputStream.read()
         }
     }
     #+END_SRC

     Please ignore the details, it is just a code snippet.
     As I limited knowledge in java, inputStream.read() is a blocking method, let alone
     it is inside while(true) loop.

     It is highly possible that one thread will continue reading data on its tcp
     connection, let the other threads starve. For some reason, windows os averages
     them better than ubuntu in this specific case.

     But I personally think while(true) plus blocking inputStream.read() is bad.

     6. Possible solution
     a. Quickest - Use qamp-ctrl-pc for this test.

     b. Try to use java.nio non-blocking class, for handling tcp connection. But I am
     complete new to it. Needs time to read it and try to use it in the dummy folfer
     server.
     http://tutorials.jenkov.com/java-nio/index.html
     Hard to say if it will solve this problem. Anyone who used java.nio class might give a hint. ;)

     c. Apply fairness on 12 tcp connections, but fairness is also having some
     drawback in this case.

     As stated at http://stackoverflow.com/questions/3940164/java-waiting-on-synchronized-block-who-goes-first
     "Fairness comes at a cost, and the predictability is achieved at the expense of
     big throughput drop."

     Also it is not what we are doing in the real scenario, then the test become pointless.

     // ************************************************************************
     Thanks for your valuable time for reading this.
     Welcome any comment and suggestion.
     Any correction would be appreciated, I am still learning. ;)

* <2016-10-25 Tue>
** DONE Replace ignore clipped data in the database by disabling debug mode and sweeping voltage
   CLOSED: [2016-10-26 Wed 11:18]
** DONE Figure out how to get the golden data file
   CLOSED: [2016-10-26 Wed 13:05]
** DONE Try to replace the golden data file with the right one
   CLOSED: [2016-10-26 Wed 13:06]
** DONE Figure out how many junit tests are using debug mode
   CLOSED: [2016-10-26 Wed 11:18]
* <2016-10-27 Thu>
** DONE Find out why QAmp boards sometimes cannot complete "server" commands
   CLOSED: [2016-10-27 Thu 10:51]
   - Note taken on [2016-10-27 Thu 10:51] \\
     svn+ssh://svn.sophion.net/svn/Qube/Working/qamp/testsystem
     
     # changeset
     r47137 | ndy | 2016-09-13 13:44:41 +0200 (Tue, 13 Sep 2016) | 1 line
     
     // Disabled all channels on board 8 (column 17-18) because the board does not answer to the reset command QUBE-6614
   java.lang.Exception: Command failed because no amplifier boards completed the command 'server'
	at com.sophion.qube.devices.amplifier384.Command.waitForCompletion(Command.java:384)
	at com.sophion.qube.devices.amplifier384.Amplifier384Controller.setDataServer(Amplifier384Controller.java:614)
	at com.sophion.qube.devices.amplifier384.Amplifier384Controller.initialize(Amplifier384Controller.java:167)
	at com.sophion.qube.devices.amplifier384.Amplifier384Controller.<init>(Amplifier384Controller.java:89)
	at com.sophion.qube.devices.amplifier384.Amplifier384Device.connect(Amplifier384Device.java:273)
	at com.sophion.qube.actionexecutionengine.model.Device.doWakeFromStandbyState(Device.java:1401)
	at com.sophion.qube.actionexecutionengine.model.Device$9.doHandle(Device.java:183)
	at com.sophion.qube.actionexecutionengine.model.Device$9.doHandle(Device.java:175)
	at com.sophion.general.asyncmessaging.AsyncMessagingThread$MessageHandlerMethodWithReturn.handle(AsyncMessagingThread.java:68)
	at com.sophion.general.asyncmessaging.AsyncMessagingThread$1.run(AsyncMessagingThread.java:191)
	at com.biolinscientific.common.threads.TriggeredTask$2.run(TriggeredTask.java:316)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
** TODO Verify everything is OK in the jenkins job
** DONE Trace down the A17-P18 board failure tests
   CLOSED: [2016-11-01 Tue 10:54]
   - Note taken on [2016-11-01 Tue 10:54] \\
     It is disabled due to VoltageProtocolTest.testNoncontinuousRamp.
* <2016-11-01 Tue>
** DONE Golden data mismatch on some channels.
   CLOSED: [2016-11-10 Thu 14:00]
   - Note taken on [2016-11-10 Thu 14:00] \\
     The issue is that the windows pc is a danish version, hence it uses comma instead of dot.
   - Note taken on [2016-11-02 Wed 13:25] \\
     * Works fine on the datapc but not on the ctrlpc
     *  VoltageProtocolTest requires 4.5GB for the actual data
     * Ctrlpc is out of space.
** DONE Some channels received zero data - testNoncontinuousRamp().
   CLOSED: [2016-11-10 Thu 14:01]
   - Note taken on [2016-11-10 Thu 14:01] \\
     The same reason of golden data mismatch.
** DONE QAmp is still EXECUTOR which should be STOPPED state - testFailingBoard(), testLongSlowRamp().
   CLOSED: [2016-11-10 Thu 14:01]
   - Note taken on [2016-11-10 Thu 14:01] \\
     Too many log could lead to this issue.
** DONE VeryLongWaveformTest is the previous test.
   CLOSED: [2016-11-10 Thu 14:02]
   - Note taken on [2016-11-10 Thu 14:02] \\
     None related. Wrong observation.
** DONE actionOutcome.isResultsComplete() did not complete on time.
   CLOSED: [2016-11-10 Thu 14:02]
   - Note taken on [2016-11-10 Thu 14:02] \\
     JUnit test running on the ctrl pc could be slightly slower than running on the
     data pc. Also it missed the second round of checking if the action outcome is
     completed or not. The fix is that we query action outcome again proactively.
| test                              | failure                                                                                        |
|-----------------------------------+------------------------------------------------------------------------------------------------|
| testVoltageProtocolOnSomeChannels | actionOutcome.isResultsComplete() did not complete on time. waitedTime: 100000 timeout: 100000 |
| testComplexWaveform               | Data did not match golden data. channels: A1                                                   |
| testNoncontinuousRamp             | Data did not match golden data. channels: A1                                                   |
| testFailingBoard                  | Check amount of data received                                                                  |
| testLongSlowRamp                  | Check amount of data received                                                                                               |


** DONE Cleanup ctrlpc
   CLOSED: [2016-11-02 Wed 15:38]
   - Note taken on [2016-11-10 Thu 14:04] \\
     Niels helped me clean up the ctrl pc. Now it is 75% free of disk space.

* <2016-11-10 Thu>
** TODO Investigate windows device driver.
* <2016-12-14 Wed>
** DONE Figured out why the integrated combiend action does not work
   CLOSED: [2016-12-15 Thu 10:01]
** DONE Test and debug on the test system
   CLOSED: [2016-12-15 Thu 10:01]
** DONE Discussed with Mikkel about showing parameter and parameter set at the same time
   CLOSED: [2016-12-15 Thu 10:02]
** DONE Jens helped me verified the RSCOMP and LeakCalibration to a certain degree
   CLOSED: [2016-12-15 Thu 10:02]
* <2016-12-15 Thu>
** DONE Checked and updated jenkins failed builds
   CLOSED: [2016-12-15 Thu 09:58]
** TODO Display parameter and parameter set at the same time for the combined action
** TODO 
* PENDING
** FPGA led is not turnning off after a 12H burn in test.
* NOTE
** waveform -i 0 -c -s 250,0,0 -s 5,0,-500 -s 2495,-500,500 -s 5,500,0 -z
** OpenAmplifierTest
***  waveform -i 22 -c -s 100,0,500 -s 200,500,-500 -s 200,-500,500 -s 100,500,0 -z; boards: 0,; ;
*** runwaveform -i 22 -r -c 0xffffffff -t 0; boards: 0,; ;
*** version info from the working deb package 0.98
*** QAmp> version
    (0) OK
    (0) Prompt version 4
    (0) Version 1.0.0.37358 (build #1894)
    (0) FPGA version 1.09 (build #840, SVN rev: 34412)
    (0) AT91Bootstrap version 0.0.1 (jenkins build:1354 svn:36779)
    (0) RedBoot version 1.2 (svn: 35704 build: 1568 timestamp: 1568)
    (0) Capability: random-cmd
    (0) Capability: high-capcomp
    (0) END
    QAmp>

